<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ga.greenApple.mapper.AdminMapper">
	
	<!-- 상품 목록 -->
	<select id="productList" resultType="product" parameterType="forAdmin">
		select * from (select rowNum rn, a.* from
			(select * from product
			<where>
				<if test="keyword != null and keyword != ''">
				<!-- $를 붙이면 작은 따옴표가 붙지 않고, #은 ''가 붙어서 들어간다 -->
					${tag} like '%'||#{keyword}||'%'
				</if>
			</where>
			order by inputDate desc) a)
			where rn between #{startRow} and #{endRow}
	</select>
	
	<!-- 상품 등록 -->
	<insert id="pdInsert" parameterType="product">
		insert into product values ( #{productCode}, #{thumbnail}, #{fileName}, 
			#{productName}, #{price}, #{productDescription}, #{origin}, #{seasonal}, 
			#{stock}, sysdate, 'n', 'n' )
	</insert>
	
	<!-- 상품 사진 등록 -->
	<insert id="insertPhotos" parameterType="productImg">
		insert into product_img values ( product_img_seq.nextval, #{productCode}, 
			#{fileName} )
	</insert>
	
	<!-- 상품 수정 (이미지 수정 안하는 경우) -->
	<update id="productUpdateNoImg" parameterType="product">
		update product set productName = #{productName}, price = #{price},
			productDescription = #{productDescription}, origin = #{origin},
			seasonal = #{seasonal}, stock = #{stock}
			where productCode = #{productCode}
	</update>
	
	<!-- 상품 수정 (productImg 지우기) -->
	<delete id="productImgDelete" parameterType="string">
		delete from product_img where productCode = #{productCode}
	</delete>
	
	<!-- 상품 수정 -->
	<update id="pdUpdate" parameterType="product">
		update product set thumbnail = #{thumbnail}, productName = #{productName}, 
			price = #{price}, productDescription = #{productDescription},
			origin = #{origin}, seasonal = #{seasonal}, stock = #{stock}
			<if test="fileName != null">
				, fileName = #{fileName}
			</if>
			where productCode = #{productCode}
	</update>
	
	<!-- 상품 삭제 -->
	<update id="pdDelete" parameterType="string">
		update product set del = 'y' where productCode = #{productCode}
	</update>
	
	<!-- 상품 품절 -->
	<update id="productSoldOut" parameterType="string">
		update product set soldOut = 'y' where productCode = #{productCode}
	</update>
	
	<!-- 회원 목록 -->
	<select id="memberList" resultType="member" parameterType="forAdmin">
		select id, name, tel, joinDate, address1, address2, del from
			(select rowNum rn, a.* from
			(select * from member
			<where>
				<if test="keyword != null and keyword != ''">
					${tag} like '%'||#{keyword}||'%'
				</if>
			</where>
			order by joinDate desc) a)
			where rn between #{startRow} and #{endRow}
	</select>
	
	<!-- 회원 탈퇴 처리 -->
	<update id="memberDelete" parameterType="string">
		update member set del = 'y' where id = #{id}
	</update>
	
	<!-- 리뷰 목록 -->
	<select id="reviewList" resultType="review" parameterType="forAdmin">
		select * from (select rowNum rn, a.* from
			(select * from review
			<where>
				<if test="keyword != null and keyword != ''">
					${tag} like '%'||#{keyword}||'%'
				</if>
			</where>
			order by reviewDate desc) a)
			where rn between #{startRow} and #{endRow}
	</select>
	
	<!-- 리뷰 삭제 -->
	<update id="reviewDelete" parameterType="string">
		update review set del = 'y' where reviewId = #{reviewId}
	</update>
	
	<!-- 페이징 시 총 상품 개수 구하기 -->
	<select id="productTotal" resultType="integer">
		select count(*) from product
	</select>
	
	<!-- 페이징 시 검색한 경우 총 상품 개수 구하기 -->
	<select id="productTotalSearch" resultType="integer" parameterType="forAdmin">
		select count(*) from product
			where ${tag} like '%'||#{keyword}||'%'
	</select>
	
	<!-- 페이징 시 총 회원수 구하기 -->
	<select id="memberTotal" resultType="integer">
		select count(*) from member
	</select>
	
	<!-- 페이징 시 총 리뷰 개수 구하기 -->
	<select id="reviewTotal" resultType="integer">
		select count(*) from review
	</select>
</mapper>